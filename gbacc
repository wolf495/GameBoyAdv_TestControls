#!/bin/bash

KITHOME="/home/jsoto/devkitadv"

# print the help message for the program
showhelp() {
cat <<EOF
Usage: gbacc [options] files...
Options:
  -h --help         Show this message
  -o --output OUT   Use OUT as the executable name
Files:
  Can be any number of .c or .s input files.
EOF
    exit 0
}

# parse the command line options
POSITIONAL=()
OUTPUT="program.gba"
while [[ $# -gt 0 ]]
do
    key="$1"

    case $key in
        # save the output as the programs name
        -o|--output)
            OUTPUT="$2"
            shift
            shift
            ;;

        # they need help
        -h|--help)
            showhelp
            ;;

        # pass others as positional arguments
        *)
            POSITIONAL+=("$1")
            shift
            ;;
    esac
done

# restore positional parameters
set -- "${POSITIONAL[@]}"

# ensure that at least one input file was passed
if [ $# -lt 1 ] 
then
    showhelp
fi

# for each argument
for f in $*
do
    # get base name and extension
    base=$(basename "$f")
    extension="${base##*.}"
    base="${base%.*}"

    # if it's a C file, compile it
    if [ "$extension" = "c" ]
    then
        $KITHOME/bin/arm-agb-elf-gcc -c -O3 -std=c99 "$base.$extension"
    fi

    # if it's a S file, assemble it
    if [ "$extension" = "s" ]
    then
        $KITHOME/bin/arm-agb-elf-gcc -c "$base.$extension"
    fi
done

# work around for defining the interrupt table needed for devkit
echo "int IntrTable = 0;" > /tmp/$USER-intrtable.c

# now link all the .o files we have
$KITHOME/bin/arm-agb-elf-gcc -O3 -nostartfiles /tmp/$USER-intrtable.c $KITHOME/arm-agb-elf/lib/crt0.o -o program.elf *.o -lm
$KITHOME/bin/arm-agb-elf-objcopy -O binary program.elf ${OUTPUT}

# get rid of temp files
rm -f *.o *.elf /tmp/$USER-intrtable.c

